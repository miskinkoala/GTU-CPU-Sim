#GTU-C312 CALL and RET Test Program - Sequential Order
Begin Data Section
0 0     #program counter
1 1000  # stack pointer
2 0     #system call result
3 0     #instruction count
4 0     #reserved
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
# Test data for CALL/RET operations
50 10   # Parameter for first subroutine
51 0    # Result storage for first subroutine
52 5    # Parameter for second subroutine
53 0    # Result storage for second subroutine
54 0    # Temp storage
55 0    # Counter for nested calls
56 3    # Test value for factorial
57 1    # Factorial result storage
58 0    # Multiplication temp
59 0    # Loop counter
End Data Section

Begin Instruction Section
# Test 1: Simple subroutine call
0 SET 42 50         # Set parameter value
1 CALL 20           # Call simple subroutine at instruction 20
2 SYSCALL PRN 51    # Print result (should be 52)

# Test 2: Second subroutine call
3 SET 15 52         # Set parameter for second subroutine
4 CALL 25           # Call arithmetic subroutine at instruction 25
5 SYSCALL PRN 53    # Print result (should be 35)

# Test 3: Nested subroutine calls
6 SET 3 56          # Set factorial input
7 CALL 30           # Call factorial subroutine
8 SYSCALL PRN 57    # Print factorial result (should be 6)

# Test 4: Multiple sequential calls
9 SET 100 50        # Set new parameter
10 CALL 20          # Call simple subroutine again
11 SYSCALL PRN 51   # Print result (should be 110)

# Test 5: Verify stack pointer restoration
12 CPY 1 54         # Copy stack pointer to temp
13 SYSCALL PRN 54   # Should print 1000 (original SP)

14 HLT              # End main program

# Reserved space for proper instruction ordering
15 SET 0 0          # Placeholder
16 SET 0 0          # Placeholder
17 SET 0 0          # Placeholder
18 SET 0 0          # Placeholder
19 SET 0 0          # Placeholder

# Subroutine 1: Simple add 10 operation (starts at instruction 20)
20 CPY 50 51        # Copy parameter to result
21 ADD 51 10        # Add 10 to the parameter
22 RET              # Return to caller

# Reserved space
23 SET 0 0          # Placeholder
24 SET 0 0          # Placeholder

# Subroutine 2: Arithmetic operations (starts at instruction 25)
25 CPY 52 53        # Copy parameter to result
26 ADD 53 20        # Add 20
27 RET              # Return to caller

# Reserved space
28 SET 0 0          # Placeholder
29 SET 0 0          # Placeholder

# Subroutine 3: Factorial calculation (starts at instruction 30)
30 CPY 56 55        # Copy input to counter
31 SET 1 57         # Initialize result to 1
32 JIF 55 40        # If counter <= 0, jump to end
33 CALL 45          # Call multiply helper
34 ADD 55 -1        # Decrement counter
35 SET 32 0         # Jump back to loop check
36 SET 0 0          # Placeholder
37 SET 0 0          # Placeholder
38 SET 0 0          # Placeholder
39 SET 0 0          # Placeholder
40 RET              # Return from factorial

# Reserved space
41 SET 0 0          # Placeholder
42 SET 0 0          # Placeholder
43 SET 0 0          # Placeholder
44 SET 0 0          # Placeholder

# Multiply helper subroutine (starts at instruction 45)
45 CPY 57 58        # Copy current result to temp
46 SET 0 59         # Initialize loop counter
47 JIF 55 55        # If multiplier <= 0, done
48 ADD 59 58        # Add multiplicand to counter
49 ADD 55 -1        # Decrement multiplier
50 SET 47 0         # Jump back to multiply loop
51 SET 0 0          # Placeholder
52 SET 0 0          # Placeholder
53 SET 0 0          # Placeholder
54 SET 0 0          # Placeholder
55 CPY 59 57        # Copy result back
56 RET              # Return from multiply helper

End Instruction Section
