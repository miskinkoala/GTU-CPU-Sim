# GTU-C312 Operating System with Macros - Complete Implementation
# Register and Memory Layout Macros

# Memory Layout Constants

# Sentinel Values

# Thread States

# System Configuration

# OS Data Locations

# Debug Configuration

#GTU-C312 Operating System with Cooperative Multitasking
Begin Data Section
# CPU Registers (Memory-mapped)
0 100
1 1000
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

# OS Data Area (21-999) - Kernel mode only
21 57005
22 4
23 0
24 0
25 1
26 0
27 0
28 40
29 0
30 1

# Thread Table Structure (4 threads * 10 words each)
# Thread 0 (OS itself)
40 0
41 0
42 0
43 2
44 100
45 1000
46 1000
47 0
48 0
49 0

# Thread 1 (Sorting Thread) - FIXED STACK SIZE
50 1
51 0
52 0
53 1
54 1000
55 1999
56 1999
57 0
58 0
59 0

# Thread 2 (Search Thread) - FIXED STACK SIZE
60 2
61 0
62 0
63 1
64 2000
65 2999
66 2999
67 0
68 0
69 0

# Thread 3 (Custom Thread) - FIXED STACK SIZE
70 3
71 0
72 0
73 1
74 3000
75 3999
76 3999
77 0
78 0
79 0

# OS Working Variables
160 0
161 0
162 0
163 0
164 0
165 1
170 0
171 0
172 0
173 0
174 3
175 0

999 48879

# Thread 1 Data Area (1000-1999) - Bubble Sort
1000 0
1001 5
1002 64
1003 34
1004 25
1005 12
1006 90
1007 0
1008 0
1009 0
1010 0

# Thread 2 Data Area (2000-2999) - Linear Search
2000 0
2001 5
2002 25
2003 64
2004 34
2005 25
2006 12
2007 90
2008 -1
2009 0
2010 0

# Thread 3 Data Area (3000-3999) - Factorial Calculator
3000 0
3001 5
3002 1
3003 1
3004 0
3005 0

End Data Section

Begin Instruction Section
# OS Boot and Initialization (Instructions 100-199)
100 SET 0 13
101 SET 1 25
102 SET 0 23
103 SET 40 28
104 CALL 200
105 SET 110 0

# Main OS Loop (Instructions 110-150)
110 CPY 25 4
111 SUBI 2 4
112 JIF 4 190
113 CPY 175 5
114 SUBI 174 5
115 JIF 5 180
116 CALL 400
117 CALL 500
118 ADD 24 1
119 SET 110 0

# All Threads Completed Handler (Instructions 180-189)
180 SET 57005 4
181 SYSCALL PRN 4
182 SET 2 25
183 SET 190 0

# OS Shutdown Sequence (Instructions 190-199)
190 SET 48879 4
191 SYSCALL PRN 4
192 HLT

# Thread Table Initialization (Instructions 200-250) - FIXED
200 CPY 14 4
201 CPY 1 14
202 SET 40 5
203 SET 0 6              # Initialize counter to 0
204 CPY 22 7  # Load thread count
205 SUBI 6 7        # temp4 = thread_count - counter
206 JIF 7 250            # Exit if thread_count - counter <= 0 (i.e., counter >= thread_count)
207 CPY 5 10
208 CPY 6 11
209 CALL 260
210 ADD 5 10
211 ADD 6 1              # Increment counter
212 SET 204 0                 # Jump back to loop condition
250 CPY 4 14
251 RET

# Thread Initialization Helper (Instructions 260-290)
260 CPY 10 5
261 CPY 11 6
262 SET 6 5
263 ADD 5 1
264 CPY 3 7
265 SET 7 5
266 ADD 5 2
267 SET 0 5
268 ADD 5 1
269 CPY 6 7
270 JIF 7 280
271 CPY 6 8
272 SUBI 3 8
273 JIF 8 285
274 SET 1 5
275 SET 290 0
280 SET 2 5
281 SET 290 0
285 SET 0 5
290 RET

# Main Scheduler (Instructions 400-450)
400 CPY 14 4
401 CPY 1 14
402 CPY 23 5
403 JIF 5 420
404 SET 450 0
420 CALL 600
421 CPY 165 6
422 JIF 6 450
423 SET 6 23
424 CALL 700
450 CPY 4 14
451 RET

# System Call Handler (Instructions 500-550)
500 CPY 2 10
501 JIF 10 550
502 CPY 10 4
503 SUBI 1 4
504 JIF 4 510
505 ADD 4 1
506 SUBI 2 4
507 JIF 4 520
508 ADD 4 2
509 SUBI 3 4
510 JIF 4 530
511 SET 550 0
512 SET 100 11
513 SET 550 0
520 SET 1 26
521 SET 0 23
522 SET 550 0
530 CALL 800
531 SET 550 0
550 SET 0 2
551 RET

# Find Next Ready Thread (Instructions 600-650)
600 CPY 30 4
601 ADD 4 1
602 CPY 4 5
603 SUBI 3 5
604 JIF 5 610
605 SET 620 0
610 SET 1 4
620 SET 40 5
621 CPY 4 6
622 CALL 850
623 CPY 12 7
624 ADD 7 3
625 CPY 7 8
626 SUBI 1 8
627 JIF 8 640
628 ADD 4 1
629 CPY 4 9
630 SUBI 3 9
631 JIF 9 635
632 SET 622 0
635 SET 1 4
636 SET 622 0
640 SET 4 30
641 SET 4 165
650 RET

# Context Switch (Instructions 700-750)
700 CPY 14 4
701 CPY 1 14
702 CPY 23 5
703 CPY 5 10
704 CALL 850
705 CPY 12 6
706 ADD 6 4
707 CPY 0 7
708 SET 7 6
709 ADD 6 1
710 CPY 1 8
711 SET 8 6
712 CPY 165 5
713 SET 5 23
714 CPY 5 10
715 CALL 850
716 CPY 12 6
717 ADD 6 4
718 CPY 6 7
719 SET 7 0
720 ADD 6 1
721 CPY 6 8
722 SET 8 1
723 USER 1000
750 RET

# Thread Completion Handler (Instructions 800-830)
800 CPY 23 4
801 CPY 4 10
802 CALL 850
803 CPY 12 5
804 ADD 5 3
805 SET 0 5
806 ADD 175 1
807 SET 0 23
808 RET

# Calculate Thread Address Helper (Instructions 850-870)
850 SET 40 11
851 CPY 10 12
852 ADD 12 12
853 ADD 12 12
854 ADD 12 12
855 ADD 12 12
856 ADD 12 12
857 ADD 11 12
858 RET

# Thread 1: Bubble Sort Implementation (Instructions 1000-1100)
1000 SET 1002 4
1001 CPY 1001 5
1002 SET 0 1008
1003 CPY 1008 6
1004 SUBI 5 6
1005 JIF 6 1080
1006 SET 0 1009
1007 CPY 1009 7
1008 CPY 5 8
1009 SUBI 8 1008
1010 SUBI 8 7
1011 JIF 8 1070
1012 CPY 4 9
1013 ADD 9 7
1014 CPY 9 10
1015 ADD 9 1
1016 CPY 9 11
1017 CPY 10 12
1018 SUBI 11 12
1019 JIF 12 1065
1020 SET 11 9
1021 SUBI 9 1
1022 SET 10 9
1065 ADD 1009 1
1066 SYSCALL YIELD
1067 SET 1007 0
1070 ADD 1008 1
1071 SET 1003 0
1080 SYSCALL PRN 1002
1081 SYSCALL PRN 1003
1082 SYSCALL PRN 1004
1083 SYSCALL PRN 1005
1084 SYSCALL PRN 1006
1085 SYSCALL HLT

# Thread 2: Linear Search Implementation (Instructions 2000-2100)
2000 SET 2003 4
2001 CPY 2001 5
2002 CPY 2002 6
2003 SET 0 2009
2004 SET -1 2008
2005 CPY 2009 7
2006 SUBI 5 7
2007 JIF 7 2090
2008 CPY 4 8
2009 ADD 8 7
2010 CPY 8 9
2011 CPY 6 10
2012 SUBI 10 9
2013 JIF 10 2080
2014 ADD 2009 1
2015 SYSCALL YIELD
2016 SET 2005 0
2080 SET 2009 2008
2090 SYSCALL PRN 2008
2091 SYSCALL HLT

# Thread 3: Factorial Calculator (Instructions 3000-3100)
3000 CPY 3001 4
3001 SET 1 3002
3002 SET 1 3003
3003 CPY 3003 5
3004 SUBI 4 5
3005 JIF 5 3090
3006 CPY 3002 6
3007 CPY 3003 7
3008 CALL 3050
3009 CPY 12 3002
3010 ADD 3003 1
3011 SYSCALL YIELD
3012 SET 3003 0
3050 SET 0 12
3051 JIF 7 3070
3052 ADD 12 6
3053 ADD 7 -1
3054 SET 3051 0
3070 RET
3090 SYSCALL PRN 3002
3091 SYSCALL HLT

End Instruction Section
